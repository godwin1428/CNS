10.Write a C program for Playfair matrix:  
M F H I/J K  
U N O P Q  
Z V W X Y  
E L A R G  
D S T B C  
Encrypt this message: Must see you over Cadogan West. Coming at once. 

#include <stdio.h>
#include <string.h>
#include <ctype.h>

char matrix[5][5] = {
    {'M', 'F', 'H', 'I', 'K'},
    {'U', 'N', 'O', 'P', 'Q'},
    {'Z', 'V', 'W', 'X', 'Y'},
    {'E', 'L', 'A', 'R', 'G'},
    {'D', 'S', 'T', 'B', 'C'}
};

void find_position(char ch, int *row, int *col) {
    int i, j;
    if (ch == 'J') ch = 'I';
    for (i = 0; i < 5; i++) {
        for (j = 0; j < 5; j++) {
            if (matrix[i][j] == ch) {
                *row = i;
                *col = j;
                return;
            }
        }
    }
}

void encrypt_pair(char a, char b) {
    int r1, c1, r2, c2;
    find_position(a, &r1, &c1);
    find_position(b, &r2, &c2);
    
    if (r1 == r2) {
        printf("%c%c", matrix[r1][(c1 + 1) % 5], matrix[r2][(c2 + 1) % 5]);
    } else if (c1 == c2) {
        printf("%c%c", matrix[(r1 + 1) % 5][c1], matrix[(r2 + 1) % 5][c2]);
    } else {
        printf("%c%c", matrix[r1][c2], matrix[r2][c1]);
    }
}

void encrypt_message(char *message) {
    char clean_msg[100];
    int len = 0, i;
    
    for (i = 0; message[i] != '\0'; i++) {
        if (isalpha(message[i])) {
            clean_msg[len++] = toupper(message[i] == 'J' ? 'I' : message[i]);
        }
    }
    clean_msg[len] = '\0';
    
    for (i = 0; i < len; i += 2) {
        if (i + 1 == len || clean_msg[i] == clean_msg[i + 1]) {
            encrypt_pair(clean_msg[i], 'X');
            i--;
        } else {
            encrypt_pair(clean_msg[i], clean_msg[i + 1]);
        }
    }
    printf("\n");
}

int main() {
    char message[] = "Must see you over Cadogan West. Coming at once.";
    encrypt_message(message);
    return 0;
}
